------------------------------------------------------------
ZADATAK 9:

#include<iostream>
#include<vector>
using namespace std;

bool ProvjeraParnosti(vector<int>v){
    
    for(int i=0;i<v.size();i++){
        if(v[i]%2==0){
            return true;
        }
    }
    return false;
}
int main(){
    int n;
    cout<<"Unesi velicinu vektora: ";
    cin>>n;
    vector<int>v(n);
    cout<<"Unesi elemente vektora: ";
    for(int i=0;i<n;i++){
        cin>>v[i];
    }
    if(ProvjeraParnosti(v)){
        cout<<"U vektoru ima elemenata koji su parni.";
    }else{
        cout<<"U vektoru nema elemenata koji su parni.";
    }
    
    return 0;
}

-----------------------------------------------------------
ZADATAK 10:

#include<iostream>
#include<vector>
#include<cmath>
using namespace std;

bool ProvjeraPotpunihKvadrata(vector<int>v){
    for(int i=0;i<v.size();i++){
        double korijen=static_cast<int>(sqrt(v[i]));
        if(korijen*korijen==v[i]){
            return true;
        }
    }
    return false;
}
int main(){
   int n;
   cout<<"Unesi velicinu vektora: ";
   cin>>n;
   vector<int>v(n);
   cout<<"Unesite elemente vektora: ";
   for(int i=0;i<n;i++){
       cin>>v[i];
   }
   if(ProvjeraPotpunihKvadrata(v)){
       cout<<"U vektoru ima elemenata koji su potpuni kvadrati.";
   }else{
       cout<<"U vektoru nema elemenata koji su potpuni kvadrati.";
   }
    
    return 0;
}


-----------------------------------------------------------------------------

ZADATAK 12:

#include<iostream>
#include<vector>
#include<cmath>
using namespace std;

bool JeTrocifren(vector<int>v){
    for(int i=0;i<v.size();i++){
        if(abs(v[i])>=100 && abs(v[i])<=999){
            return true;
        }
    }
    return false;
}
int main(){
   int n;
   cout<<"Unesi velicinu vektora: ";
   cin>>n;
   vector<int>v(n);
   cout<<"Unesite elemente vektora: ";
   for(int i=0;i<n;i++){
       cin>>v[i];
   }
   if(JeTrocifren(v)){
       cout<<"U vektoru ima trocifrenih brojeva.";
   }else{
       cout<<"U vektoru nema trocifrenih brojeva.";
   }
    
    return 0;
}

----------------------------------------------------------------

ZADATAK 13:

#include<iostream>
#include<vector>
using namespace std;
bool JeStepenDvojke(int broj){
    if(broj<=0) return false;

    while(broj>1){
        if(broj%2!=0)
            return false;
        broj/=2;
    }

    return true;
}
bool ImaStepenDvojke(vector<int>v){
    for(int broj:v){
        if(JeStepenDvojke(broj))
            return true;
    }
    return false;
}
int main(){
    int n;
    cout<<"Unesite broj elemenata: ";
    cin>>n;
    
    vector<int> brojevi(n);
    cout<<"Unesite "<<n<<" cijelih brojeva: ";
    for(int i=0;i<n;i++){
        cin>>brojevi[i];
    }

    if(ImaStepenDvojke(brojevi)){
        cout<<"U vektoru postoji broj koji je stepen broja 2."<<endl;
    }else{
        cout<<"U vektoru ne postoji nijedan broj koji je stepen broja 2."<<endl;
    }
    
    return 0;
}

-----------------------------------------------------------------------------------
ZADATAK 14:

#include <iostream>
#include <vector>
using namespace std;

vector<int> Djeliloci(int n){
    vector<int> djeliloci;
    for(int i=1;i<=n;i++){
        if(n%i==0)
            djeliloci.push_back(i);
    }
    return djeliloci;
}

int main(){
    int n;
    cout<<"Unesite prirodan broj: ";
    cin>>n;
    vector<int> rezultat=Djeliloci(n);
    cout<<"Djelioci broja "<<n<<" su: ";
    for(int i=0;i<rezultat.size();i++){
        cout<<rezultat[i]<<" ";
    }
    
 
    return 0;
}
------------------------------------------------------------------------
ZADATAK 15:
#include <iostream>
#include <vector>
using namespace std;
vector<int> StepeniDvojkeManjiOd(int n){
    vector<int> stepeni;
    int stepen=1;
    while(stepen<n){
        stepeni.push_back(stepen);
        stepen*=2;
    }

    return stepeni;
}

int main(){
    int n;
    cout<<"Unesite prirodan broj: ";
    cin>>n;
    vector<int> rezultat=StepeniDvojkeManjiOd(n);
    cout << "Stepeni dvojke manji od " << n << " su: ";
    for(int i=0;i<rezultat.size();i++){
        cout<<rezultat[i]<<" ";
    }
   
    return 0;
}
----------------------------------------------------------
ZADATAK 17:

#include<iostream>
#include<vector>
using namespace std;

vector<int>Trocifreni(int n){
    vector<int>rez;
    for(int i=100;i<=999;i++){
        if(i%n==0){
            rez.push_back(i);
        }
    }
    return rez;
}
int main(){
    int n;
    cout<<"Unesi neki broj:";
    cin>>n;
    vector<int>rez;
    rez=Trocifreni(n);
    cout<<"Elementi: "<<endl;
    for(int i=0;i<rez.size();i++){
        cout<<rez[i]<<" ";
    }
    
    return 0;
}
---------------------------------------------------------------
ZADATAK 18:

#include<iostream>
#include<vector>
using namespace std;

vector<int> NoviVektor(int niz[],int brEl){
    vector<int>rez;
    for(int i=0;i<brEl;i++){
        if(niz[i]%2==0){
            rez.push_back(niz[i]);
        }
    }
    for(int i=0;i<brEl;i++){
        if(niz[i]%2!=0){
            rez.push_back(niz[i]);
        }
    }
    return rez;
}
int main(){
    int kapacitet,niz[100];
    cout<<"Unesite kapacitet niza: ";
    cin>>kapacitet;
    cout<<"Unesite elemente niza: ";
    for(int i=0;i<kapacitet;i++){
        cin>>niz[i];
    }
    vector<int> r=NoviVektor(niz,kapacitet);
    cout<<"Novi vektor: ";
    for(int i=0;i<r.size();i++){
        cout<<r[i]<<" ";
    }
    
    
    return 0;
}
-----------------------------------------------------------
ZADATKA 19:

#include<iostream>
#include<vector>
using namespace std;

int BrojacCifara(int n){
    int brojac=0;
    while(n!=0){
        int cifra=n%10;
        brojac++;
        n/=10;
    }
    return brojac;
}
vector<int> NoviVektor(vector<int> v){
    vector<int>rez;
   for(int i=0;i<v.size();i++){
       rez.push_back(BrojacCifara(v[i]));
   }
    return rez;
}
int main(){
    int n;
    cout<<"Unesi velicinu vektora: ";
    cin>>n;
    vector<int>v(n);
    cout<<"Unesite elemente vektora: ";
    for(int i=0;i<n;i++){
        cin>>v[i];
    }
    
    vector<int> r=NoviVektor(v);
    cout<<"Novi vektor: ";
    for(int i=0;i<r.size();i++){
        cout<<r[i]<<" ";
    }
    
    
    return 0;
}

----------------------------------------------------------
